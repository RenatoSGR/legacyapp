name: Build and Deploy to Azure Container Apps
on:
  workflow_dispatch:
    
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to Azure Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Build and push Docker image for Album API
      uses: docker/build-push-action@v2
      with:
        context: ./containerapps-albumapi-csharp/src
        file: ./containerapps-albumapi-csharp/src/Dockerfile
        push: true
    - name: Build and push Docker image for Album API
      uses: docker/build-push-action@v2
      with:
        context: ./containerapps-albumapi-csharp/src
        file: ./containerapps-albumapi-csharp/src/Dockerfile
        push: true
        tags: ${{ secrets.REGISTRY_NAME }}/albumapi:latest
    - name: Build and push Docker image for Album UI
      uses: docker/build-push-action@v2
      with:
        context: ./containerapps-albumui/src
        file: ./containerapps-albumui/src/Dockerfile
        push: true
        tags: ${{ secrets.REGISTRY_NAME }}/albumui:latest
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Container App environment
      id: create-env
      run: |
        env_name="my-container-app-environment"
        az containerapp env create --name $env_name --resource-group my-resource-group --location westeurope
        echo "::set-output name=env_name::$env_name"

    - name: Deploy Album API to Azure Container Apps
      run: |
        az containerapp update --name albumapi --resource-group your-resource-group --environment ${{ steps.create-env.outputs.env_name }} --image your-registry.azurecr.io/albumapi:latest
    - name: Deploy Album UI to Azure Container Apps
      run: |
        az containerapp update --name albumui --resource-group your-resource-group --environment ${{ steps.create-env.outputs.env_name }} --image your-registry.azurecr.io/albumui:latest